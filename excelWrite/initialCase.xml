<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="97c90ece-14e5-4735-8bef-05359c83e668" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="initialCase" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="97c90ece-14e5-4735-8bef-05359c83e668fileName">initialCase</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="datasource" name="getJSON" id="220ab7e7-6a08-42ff-bf0e-a0548fd426aa"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>C:/Users/Nathan.Wright/OneDrive - SmartBear Software, Inc/exampleDocs/json_names.xlsx</file><worksheet>Sheet1</worksheet><cell>A2</cell><ignoreEmpty>true</ignoreEmpty></con:configuration></con:dataSource><con:property>id</con:property><con:property>JSON</con:property><con:completeLastOperation>true</con:completeLastOperation><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="queryServer" id="c30ef03b-8892-4deb-a331-b51b91eec231"><con:settings/><con:config service="nameGenerator" resourcePath="/api/" methodName="Api" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="queryServer" id="e0a30a47-07c8-4689-8a04-13ebccf6a089" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://uinames.com</con:endpoint><con:request/><con:originalUri>http://uinames.com/api/</con:originalUri><con:assertion type="JsonPath Existence Match" id="b9363be7-7a5d-4af2-ac81-3b73ae3ec727" name="Check for existence of [name]"><con:configuration><path>$['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="04190eca-364e-46c7-951b-c90fefc6a503" name="Check for existence of [surname]"><con:configuration><path>$['surname']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="adda52d8-49ef-41c1-beda-6cb74ac8de8d" name="Check for existence of [gender]"><con:configuration><path>$['gender']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ef0995fc-2c64-4edd-a44f-4061aed84707" name="Check for existence of [region]"><con:configuration><path>$['region']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2b7d5ddc-de98-4e3d-bd47-36ae0fa4dd12" name="Match content of [gender]"><con:configuration><path>$['gender']</path><content>${getJSON#JSON#$['gender']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="ext" value="${getJson#ext}"/>
  <con:entry key="amount" value="1"/>
  <con:entry key="gender" value="${getJSON#JSON#$['gender']}"/>
  <con:entry key="region" value="sweden"/>
</con:parameters><con:parameterOrder><con:entry>amount</con:entry><con:entry>region</con:entry><con:entry>gender</con:entry><con:entry>ext</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="datasink" name="writeJSON" id="336a8714-3a99-42e9-bcf7-3346b102eab0"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="Excel"><con:configuration><file>C:/Users/Nathan.Wright/OneDrive - SmartBear Software, Inc/exampleDocs/json_names.xlsx</file><outfile>C:/Users/Nathan.Wright/OneDrive - SmartBear Software, Inc/exampleDocs/json_names.xlsx</outfile><worksheet>Sheet1</worksheet><cell>${#TestCase#excelLoc}</cell><evaluateFormulas>false</evaluateFormulas></con:configuration></con:dataSink><con:properties><con:property><con:name>JSON</con:name><con:value>${queryServer#RawResponse}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasourceloop" name="return" id="a3d4530c-29ac-4702-a542-e5afd67ff6bd"><con:settings/><con:config><dataSourceStep>getJSON</dataSourceStep><targetStep>queryServer</targetStep></con:config></con:testStep><con:testStep type="groovy" name="plusOneScript" id="57375aff-b22e-4ea8-8638-1e6547ffaa93" disabled="true"><con:settings/><con:config><script>def tc = context.getTestCase()
def colCount = tc.getPropertyValue("count")
def excelLoc = tc.getPropertyValue("excelLoc")

tc.setPropertyValue("count", "0")
log.info(colCount)
log.info(excelLoc)
//count.setPropertyValue("count", "D2")</script></con:config></con:testStep><con:properties><con:property><con:name>count</con:name><con:value>0</con:value></con:property><con:property><con:name>excelLoc</con:name><con:value>C2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c30ef03b-8892-4deb-a331-b51b91eec231</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>220ab7e7-6a08-42ff-bf0e-a0548fd426aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3d4530c-29ac-4702-a542-e5afd67ff6bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>336a8714-3a99-42e9-bcf7-3346b102eab0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>